{"version":3,"sources":["components/clear.js","components/todoForm.js","components/todo.js","components/ToDoList.js","components/kindOfTask.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","button","margin","background","Clear","setHomeTodos","setSchoolTodos","kind","classes","Button","onClick","className","type","textField","StyledH3","styled","h3","TodoForm","addTodo","useState","id","task","completed","todo","setTodo","onSubmit","e","preventDefault","trim","uuidv4","TextField","placeholder","name","value","onChange","target","ListItem","div","CheckboxDiv","StyledUl","removeButton","Todo","toggleComplete","removeTodo","style","display","Checkbox","checked","variant","textDecoration","IconButton","StyledDiv","ToDoList","homeTodos","schoolTodos","WichToDoList","List","map","key","KindOfTask","setKind","Styledh1","h1","StyledDiv2","App","useEffect","storageSchoolTodos","JSON","parse","localStorage","getItem","storageHomeTodos","setItem","stringify","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b5d59c0a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        margin: '20px 30px 0px 20px',\r\n        background: 'linear-gradient(45deg, #B22222 30%, #DC143C 60%)',\r\n    },\r\n});\r\n\r\nfunction Clear({setHomeTodos,setSchoolTodos,kind}){\r\n    const classes = useStyles();\r\n    function ClearAll(){\r\n        if(kind===\"school tasks\"){\r\n            setSchoolTodos([])\r\n        }\r\n        else{\r\n            setHomeTodos([])\r\n        }\r\n    }\r\n    return(\r\n        <Button onClick={ClearAll} className={classes.button} type=\"submit\">Delete all</Button>\r\n    )\r\n}\r\n\r\nexport default Clear;","import { Button, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Clear from \"./clear\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst useStyles = makeStyles({\r\n    textField: {\r\n        margin: '20px 0px 0px 0px',\r\n        background: 'linear-gradient(45deg, white 30%, gray 90%)',\r\n    },\r\n    button: {\r\n        margin: '20px 30px 0px 20px',\r\n        background: 'linear-gradient(45deg, #32CD32 30%, #00FF00 80%)',\r\n    },\r\n});\r\n\r\nconst StyledH3 = styled.h3`\r\n  float: left;\r\n`;\r\n\r\nfunction TodoForm({ addTodo,setSchoolTodos,setHomeTodos,kind}) {\r\n    const classes = useStyles();\r\n    const [todo, setTodo] = useState({\r\n        id: \"\",\r\n        task: \"\",\r\n        completed: false\r\n    });\r\n\r\n    function handleTaskInputChange(e) {\r\n        setTodo({ ...todo, task: e.target.value });\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (todo.task.trim()) {\r\n            addTodo({ ...todo, id: uuidv4() });\r\n            setTodo({ ...todo, task: \"\" });\r\n        }\r\n    }\r\n\r\n    return (\r\n            <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n                <StyledH3>{kind}</StyledH3>\r\n                    <TextField className={classes.textField} placeholder={\"Add task here.\"}\r\n                        type=\"text\"\r\n                        name=\"task\"\r\n                        value={todo.task}\r\n                        onChange={handleTaskInputChange}\r\n                    />\r\n                    <Button className={classes.button} type=\"submit\">+</Button>\r\n                    <Clear setSchoolTodos={setSchoolTodos} setHomeTodos={setHomeTodos} kind={kind}/>\r\n            </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;","import { Checkbox, IconButton} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst ListItem = styled.div`\r\n  font-size: xx-large;\r\n  margin-right: 10%;\r\n`;\r\nconst CheckboxDiv = styled.div`\r\n  margin-left: 30%;\r\n  margin-right: 10%;\r\n  font-size: xx-large;\r\n`;\r\n\r\nconst StyledUl = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst removeButton = styled.div`\r\n  text-align: right;\r\n`;\r\n\r\nfunction Todo({ todo, toggleComplete, removeTodo }) {\r\n    function handleCheckboxClick() {\r\n        toggleComplete(todo.id);\r\n    }\r\n\r\n    function handleRemoveClick() {\r\n        removeTodo(todo.id);\r\n    }\r\n\r\n    return (\r\n        <StyledUl style={{ display: \"flex\" }}>\r\n            <CheckboxDiv>\r\n                <Checkbox checked={todo.completed} onClick={handleCheckboxClick} />\r\n            </CheckboxDiv>\r\n            <ListItem\r\n                variant=\"body1\"\r\n                style={{\r\n                    textDecoration: todo.completed ? \"line-through\" : null\r\n                }}\r\n            >\r\n                {todo.task}\r\n            </ListItem>\r\n                <IconButton className={removeButton} onClick={handleRemoveClick}>\r\n                        <CloseIcon />\r\n                </IconButton>\r\n        </StyledUl>\r\n    );\r\n}\r\n\r\nexport default Todo;","import { List } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Todo from \"./todo\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledDiv = styled.div`\r\n  margin-top: 3%;\r\n`;\r\n\r\n\r\nfunction ToDoList({ homeTodos,schoolTodos, removeTodo, toggleComplete, kind }) {\r\n\r\n    function WichToDoList(){\r\n        if(kind===\"school tasks\"){\r\n            return <List>\r\n                {schoolTodos.map(todo => (\r\n                    <Todo\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        removeTodo={removeTodo}\r\n                        toggleComplete={toggleComplete}\r\n                    />\r\n                ))}\r\n            </List>\r\n        }\r\n        else{\r\n            return <List>\r\n            {homeTodos.map(todo => (\r\n                <Todo\r\n                    key={todo.id}\r\n                    todo={todo}\r\n                    removeTodo={removeTodo}\r\n                    toggleComplete={toggleComplete}\r\n                />\r\n            ))}\r\n        </List>\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledDiv>\r\n            <WichToDoList/>\r\n        </StyledDiv>\r\n    );\r\n}\r\n\r\nexport default ToDoList;","import React from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        margin: '20px 30px 0px 20px',\r\n        background: 'linear-gradient(45deg, #33FFFF 30%, #33CEFF 80%)',\r\n    },\r\n});\r\n\r\nfunction KindOfTask({setKind}){\r\n    const classes = useStyles();\r\n\r\n    function setKindSchoolTaken(){\r\n        setKind(\"school tasks\");\r\n    }\r\n\r\n    function setKindHuisTaken(){\r\n        setKind(\"home tasks\");\r\n    }\r\n\r\nreturn(<>\r\n    <Button onClick={setKindSchoolTaken} className={classes.button} type=\"submit\">School tasks</Button>\r\n    <Button onClick={setKindHuisTaken} className={classes.button} type=\"submit\">Home tasks</Button>\r\n    </>\r\n)\r\n}\r\n\r\nexport default KindOfTask;","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport styled from \"@emotion/styled\";\r\nimport TodoForm from \"./components/todoForm\";\r\nimport ToDoList from \"./components/ToDoList\";\r\nimport KindOfTask from \"./components/kindOfTask\";\r\n\r\nconst LOCAL_SCHOOL_KEY = \"react-todo-list-schoolTodos\";\r\nconst LOCAL_HOME_KEY = \"react-todo-list-homeTodos\";\r\n\r\nconst Styledh1 = styled.h1`\r\n  color: white;\r\n`;\r\nconst StyledDiv = styled.div`\r\n  background-color: #323633;\r\n  color: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 50px 1px darkgray;\r\n  margin: 2% 12%;\r\n  padding: 0.5%;\r\n  text-align: center;\r\n  height: fit-content;\r\n`;\r\n\r\nconst StyledDiv2 = styled.div`\r\n  background-color: #323633;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 50px 5px darkgray;\r\n  margin: 2% 8%;\r\n  padding: 0.5%;\r\n  text-align: center;\r\n`;\r\n\r\nfunction App() {\r\n    const [homeTodos, setHomeTodos] = useState([]);\r\n    const [schoolTodos, setSchoolTodos] = useState([]);\r\n    const [kind, setKind] = useState(\"school tasks\");\r\n\r\n    useEffect(() => {\r\n        const storageSchoolTodos = JSON.parse(localStorage.getItem(LOCAL_SCHOOL_KEY));\r\n        if (storageSchoolTodos) {\r\n            setSchoolTodos(storageSchoolTodos);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const storageHomeTodos = JSON.parse(localStorage.getItem(LOCAL_HOME_KEY));\r\n        if (storageHomeTodos) {\r\n            setHomeTodos(storageHomeTodos);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_HOME_KEY, JSON.stringify(homeTodos));\r\n    }, [homeTodos]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_SCHOOL_KEY, JSON.stringify(schoolTodos));\r\n    }, [schoolTodos]);\r\n\r\n    function addTodo(todo) {\r\n        if(kind===\"school tasks\"){\r\n            setSchoolTodos([todo, ...schoolTodos])\r\n        }\r\n        else{\r\n            setHomeTodos([todo, ...homeTodos])\r\n        }\r\n    }\r\n\r\n    function toggleComplete(id) {\r\n        setHomeTodos(\r\n            homeTodos.map(todo => {\r\n                if (todo.id === id) {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed\r\n                    };\r\n                }\r\n                return todo;\r\n            })\r\n        );\r\n        setSchoolTodos(\r\n            schoolTodos.map(todo => {\r\n                if (todo.id === id) {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed\r\n                    };\r\n                }\r\n                return todo;\r\n            })\r\n        );\r\n    }\r\n\r\n    function removeTodo(id) {\r\n        if(kind===\"school tasks\"){\r\n            setSchoolTodos(schoolTodos.filter(todo => todo.id !== id))\r\n        }\r\n        else{\r\n            setHomeTodos(homeTodos.filter(todo => todo.id !== id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <StyledDiv2>\r\n                <Styledh1>\r\n                    TO DO LIST\r\n                </Styledh1>\r\n                <KindOfTask setKind={setKind}/>\r\n            </StyledDiv2>\r\n            <StyledDiv>\r\n                <TodoForm addTodo={addTodo} setSchoolTodos={setSchoolTodos} setHomeTodos={setHomeTodos} kind={kind}/>\r\n                <ToDoList\r\n                    kind={kind}\r\n                    homeTodos={homeTodos}\r\n                    schoolTodos={schoolTodos}\r\n                    removeTodo={removeTodo}\r\n                    toggleComplete={toggleComplete}\r\n                />\r\n            </StyledDiv>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}