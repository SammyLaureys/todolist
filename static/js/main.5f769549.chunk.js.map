{"version":3,"sources":["Input.PNG","Buttons.PNG","components/clear.js","components/todoForm.js","components/todo.js","components/ToDoList.js","components/kindOfTask.js","components/info.js","contexts/activeToDoListProvider.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","button","margin","background","Clear","setHomeTodos","setSchoolTodos","setShoppingTodos","kind","classes","Button","onClick","className","id","type","textField","StyledH3","styled","h3","TodoForm","addTodo","useState","task","completed","todo","setTodo","onSubmit","e","preventDefault","trim","uuidv4","TextField","placeholder","name","value","onChange","target","ListItem","div","StyledUl","removeButton","Todo","toggleComplete","removeTodo","style","display","Checkbox","color","checked","variant","textDecoration","IconButton","StyledDiv","ToDoList","homeTodos","schoolTodos","shoppingTodos","WichToDoList","List","map","key","KindOfTask","setKind","to","Info","src","Buttons","input","ActiveToDoListContext","createContext","ActiveToDoListProvider","props","activeToDoList","setActiveToDoList","api","useMemo","Provider","children","Styledh1","h1","StyledButton","label","HowToUse","p","StyledDiv2","GlobalStyle","createGlobalStyle","theme","mode","App","setTheme","useEffect","storageSchoolTodos","JSON","parse","localStorage","getItem","storageHomeTodos","storageShoppingTodos","setItem","stringify","basename","path","exact","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5f769549.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Input.afe42303.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Buttons.6a4844ff.PNG\";","import React from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        margin: '20px 30px 0px 20px',\r\n        background: 'linear-gradient(45deg, #B22222 30%, #DC143C 60%)',\r\n    },\r\n});\r\n\r\nfunction Clear({setHomeTodos,setSchoolTodos, setShoppingTodos, kind}){\r\n    const classes = useStyles();\r\n    function ClearAll(){\r\n        if(kind===\"school tasks\"){\r\n            setSchoolTodos([])\r\n        }\r\n        else if(kind===\"home tasks\"){\r\n            setHomeTodos([])\r\n        }\r\n        else{\r\n            setShoppingTodos([])\r\n        }\r\n    }\r\n    return(\r\n        <Button onClick={ClearAll} className={classes.button} id=\"CLEAR ALL\" type=\"submit\">Delete all</Button>\r\n    )\r\n}\r\n\r\nexport default Clear;","import { Button, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Clear from \"./clear\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst useStyles = makeStyles({\r\n    textField: {\r\n        margin: '20px 0px 0px 0px',\r\n        background: 'linear-gradient(45deg, white 30%, gray 90%)',\r\n    },\r\n    button: {\r\n        margin: '20px 30px 0px 20px',\r\n        background: 'linear-gradient(45deg, #32CD32 30%, #00FF00 80%)',\r\n    },\r\n});\r\n\r\nconst StyledH3 = styled.h3`\r\n  float: left;\r\n`;\r\n\r\nfunction TodoForm({ addTodo,setSchoolTodos,setHomeTodos, setShoppingTodos,kind}) {\r\n    const classes = useStyles();\r\n    const [todo, setTodo] = useState({\r\n        id: \"\",\r\n        task: \"\",\r\n        completed: false\r\n    });\r\n\r\n    function handleTaskInputChange(e) {\r\n        setTodo({ ...todo, task: e.target.value });\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (todo.task.trim()) {\r\n            addTodo({ ...todo, id: uuidv4() });\r\n            setTodo({ ...todo, task: \"\" });\r\n        }\r\n    }\r\n\r\n    return (\r\n            <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n                <StyledH3>{kind}</StyledH3>\r\n                    <TextField id=\"inputField\" className={classes.textField} placeholder={\"Add task here.\"}\r\n                        type=\"text\"\r\n                        name=\"task\"\r\n                        value={todo.task}\r\n                        onChange={handleTaskInputChange}\r\n                    />\r\n                    <Button className={classes.button} id=\"+\" type=\"submit\">+</Button>\r\n                    <Clear setSchoolTodos={setSchoolTodos} setHomeTodos={setHomeTodos} setShoppingTodos={setShoppingTodos} kind={kind}/>\r\n            </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;","import { Checkbox, IconButton} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport \"../App.css\";\r\n\r\nconst ListItem = styled.div`\r\n  font-size: xx-large;\r\n  margin-right: 5%;\r\n`;\r\n\r\nconst StyledUl = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst removeButton = styled.div`\r\n  text-align: right;\r\n`;\r\n\r\nfunction Todo({ todo, toggleComplete, removeTodo }) {\r\n    function handleCheckboxClick() {\r\n        toggleComplete(todo.id);\r\n    }\r\n\r\n    function handleRemoveClick() {\r\n        removeTodo(todo.id);\r\n    }\r\n\r\n    return (\r\n        <StyledUl style={{ display: \"flex\" }}>\r\n            <div className={\"left\"}>\r\n                <Checkbox style={{color: \"white\"}} checked={todo.completed} onClick={handleCheckboxClick} />\r\n            </div>\r\n            <ListItem\r\n                variant=\"body1\"\r\n                style={{\r\n                    textDecoration: todo.completed ? \"line-through\" : null\r\n                }}\r\n            >\r\n                {todo.task}\r\n            </ListItem>\r\n                <IconButton style={{color: \"white\"}} className={removeButton} onClick={handleRemoveClick}>\r\n                        <CloseIcon />\r\n                </IconButton>\r\n        </StyledUl>\r\n    );\r\n}\r\n\r\nexport default Todo;","import { List } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Todo from \"./todo\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledDiv = styled.div`\r\n  margin-top: 3%;\r\n`;\r\n\r\n\r\nfunction ToDoList({ homeTodos, schoolTodos, shoppingTodos, removeTodo, toggleComplete, kind }) {\r\n\r\n    function WichToDoList(){\r\n        if(kind===\"school tasks\"){\r\n            return <List>\r\n                {schoolTodos.map(todo => (\r\n                    <Todo\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        removeTodo={removeTodo}\r\n                        toggleComplete={toggleComplete}\r\n                    />\r\n                ))}\r\n            </List>\r\n        }\r\n        else if(kind===\"home tasks\"){\r\n            return <List>\r\n                {homeTodos.map(todo => (\r\n                    <Todo\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        removeTodo={removeTodo}\r\n                        toggleComplete={toggleComplete}\r\n                    />\r\n                ))}\r\n            </List>\r\n        }\r\n        else{\r\n            return <List>\r\n            {shoppingTodos.map(todo => (\r\n                <Todo\r\n                    key={todo.id}\r\n                    todo={todo}\r\n                    removeTodo={removeTodo}\r\n                    toggleComplete={toggleComplete}\r\n                />\r\n            ))}\r\n        </List>\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledDiv>\r\n            <WichToDoList/>\r\n        </StyledDiv>\r\n    );\r\n}\r\n\r\nexport default ToDoList;","import React from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        margin: '20px 30px 0px 20px',\r\n        background: 'linear-gradient(45deg, #33FFFF 30%, #33CEFF 80%)',\r\n    },\r\n});\r\n\r\nfunction KindOfTask({setKind}){\r\n    const classes = useStyles();\r\n\r\n    function setKindSchoolTaken(){\r\n        setKind(\"school tasks\");\r\n    }\r\n\r\n    function setKindHuisTaken(){\r\n        setKind(\"home tasks\");\r\n    }\r\n    function setKindShoppingTaken(){\r\n        setKind(\"shopping tasks\");\r\n    }\r\n\r\nreturn(<>\r\n        <Link to='/' style={{textDecoration: 'none'}}>\r\n            <Button onClick={setKindSchoolTaken} id=\"SCHOOL TASKS\" className={classes.button} type=\"submit\">School tasks</Button>\r\n        </Link>\r\n        <Link to='/' style={{textDecoration: 'none'}}>\r\n            <Button onClick={setKindHuisTaken} id=\"HOME TASKS\" className={classes.button} type=\"submit\">Home tasks</Button>\r\n        </Link>\r\n        <Link to='/' style={{textDecoration: 'none'}}>\r\n            <Button onClick={setKindShoppingTaken} id=\"SHOPPING TASKS\" className={classes.button} type=\"submit\">Shopping tasks</Button>\r\n        </Link>\r\n    </>\r\n)\r\n}\r\n\r\nexport default KindOfTask;","import React from \"react\";\r\nimport input from \"../Input.PNG\"\r\nimport Buttons from \"../Buttons.PNG\"\r\n\r\n\r\nfunction Info(){\r\n    return(<>\r\n        <h2>How to use the app:</h2><br/>\r\n        <h4>Currently there are 3 categories:</h4>\r\n            <img src={Buttons}/>\r\n            <br/><br/>\r\n            <h4>Pick any of these to start making a list of things you need to do</h4>\r\n            <br/><br/><br/><br/>\r\n            <h4>Next, start typing tasks in the input field here:</h4>\r\n            <img src={input}/>\r\n            <h4>Then add them with the green \"+\" Button</h4>\r\n            <br/><br/><br/><br/>\r\n            <h4>The categories are completely separate from each other so they won't mix up.</h4>\r\n            <h4>They will also be stored in your browser so they stay there untill you remove them.</h4>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Info;","import React, {createContext, useContext, useMemo, useState} from \"react\";\r\nconst ActiveToDoListContext = createContext();\r\nexport function ActiveToDoListProvider(props) {\r\n    const [activeToDoList, setActiveToDoList] = useState(null);\r\n    const api = useMemo(() => ({\r\n            activeToDoList,\r\n            setActiveToDoList,\r\n        }), [activeToDoList, setActiveToDoList]\r\n    );\r\n    return (\r\n        <ActiveToDoListContext.Provider value={api}>\r\n            {props.children}\r\n        </ActiveToDoListContext.Provider>\r\n    )\r\n}\r\nexport const useActiveToDoListContext =\r\n    () => useContext(ActiveToDoListContext);","import React, {useEffect, useState} from \"react\";\r\nimport \"./App.css\";\r\nimport styled from \"@emotion/styled\";\r\nimport TodoForm from \"./components/todoForm\";\r\nimport ToDoList from \"./components/ToDoList\";\r\nimport KindOfTask from \"./components/kindOfTask\";\r\nimport Info from \"./components/info\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {ActiveToDoListProvider} from \"./contexts/activeToDoListProvider\";\r\nimport {ThemeProvider, createGlobalStyle} from \"styled-components\";\r\nimport {HashRouter, Switch, Route} from \"react-router-dom\";\r\n\r\nconst LOCAL_SCHOOL_KEY = \"react-todo-list-schoolTodos\";\r\nconst LOCAL_HOME_KEY = \"react-todo-list-homeTodos\";\r\nconst LOCAL_SHOPPING_KEY = \"react-todo-list-shoppingTodos\";\r\n\r\nconst Styledh1 = styled.h1`\r\n  width: 100%;\r\n  float: left;\r\n`;\r\n\r\nconst StyledButton = styled.label`\r\n  float: right;\r\n`;\r\n\r\nconst HowToUse = styled.p`\r\n  float: left;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  color: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 50px 1px darkgray;\r\n  margin: 2% 12%;\r\n  padding: 0.5%;\r\n  text-align: center;\r\n  height: fit-content;\r\n`;\r\n\r\nconst StyledDiv2 = styled.div`\r\n  background-color: #323633;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 50px 5px darkgray;\r\n  margin: 2% 8%;\r\n  padding: 0.5%;\r\n  text-align: center;\r\n`;\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  .div1{\r\n    background-color: ${props => props.theme.mode === 'dark' ? '#323633' : '#A9A9A9'};\r\n    color: ${props => props.theme.mode === 'dark' ? '#FFFFFF' : '#000000'};\r\n    box-shadow: ${props => props.theme.mode === 'dark' ? '0 0 50px 5px darkgray' : '0 0 50px 5px #545151'};\r\n  }\r\n  .div2{\r\n    background-color: ${props => props.theme.mode === 'dark' ? '#323633' : '#A9A9A9'};\r\n    color: ${props => props.theme.mode === 'dark' ? '#FFFFFF' : '#000000'};\r\n    box-shadow: ${props => props.theme.mode === 'dark' ? '0 0 50px 5px darkgray' : '0 0 50px 5px #545151'};\r\n  }\r\n  .infoLink{\r\n    color: ${props => props.theme.mode === 'dark' ? '#FFFFFF' : '#000000'};\r\n  }\r\n  body {\r\n    background-color: ${props => props.theme.mode === 'dark' ? '#323633' : '#A9A9A9'};\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n    const [homeTodos, setHomeTodos] = useState([]);\r\n    const [schoolTodos, setSchoolTodos] = useState([]);\r\n    const [shoppingTodos, setShoppingTodos] = useState([]);\r\n    const [kind, setKind] = useState(\"school tasks\");\r\n    const [theme, setTheme] = useState({mode: 'dark'});\r\n\r\n    useEffect(() => {\r\n        const storageSchoolTodos = JSON.parse(localStorage.getItem(LOCAL_SCHOOL_KEY));\r\n        if (storageSchoolTodos) {\r\n            setSchoolTodos(storageSchoolTodos);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const storageHomeTodos = JSON.parse(localStorage.getItem(LOCAL_HOME_KEY));\r\n        if (storageHomeTodos) {\r\n            setHomeTodos(storageHomeTodos);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const storageShoppingTodos = JSON.parse(localStorage.getItem(LOCAL_SHOPPING_KEY));\r\n        if (storageShoppingTodos) {\r\n            setShoppingTodos(storageShoppingTodos);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_HOME_KEY, JSON.stringify(homeTodos));\r\n    }, [homeTodos]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_SCHOOL_KEY, JSON.stringify(schoolTodos));\r\n    }, [schoolTodos]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_SHOPPING_KEY, JSON.stringify(shoppingTodos));\r\n    }, [shoppingTodos]);\r\n\r\n    function addTodo(todo) {\r\n        if (kind === \"school tasks\") {\r\n            setSchoolTodos([todo, ...schoolTodos])\r\n        } else if (kind === \"home tasks\") {\r\n            setHomeTodos([todo, ...homeTodos])\r\n        } else {\r\n            setShoppingTodos([todo, ...shoppingTodos])\r\n        }\r\n    }\r\n\r\n    function toggleComplete(id) {\r\n        setHomeTodos(\r\n            homeTodos.map(todo => {\r\n                if (todo.id === id) {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed\r\n                    };\r\n                }\r\n                return todo;\r\n            })\r\n        );\r\n        setSchoolTodos(\r\n            schoolTodos.map(todo => {\r\n                if (todo.id === id) {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed\r\n                    };\r\n                }\r\n                return todo;\r\n            })\r\n        );\r\n        setShoppingTodos(\r\n            shoppingTodos.map(todo => {\r\n                if (todo.id === id) {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed\r\n                    };\r\n                }\r\n                return todo;\r\n            })\r\n        );\r\n    }\r\n\r\n    function removeTodo(id) {\r\n        if (kind === \"school tasks\") {\r\n            setSchoolTodos(schoolTodos.filter(todo => todo.id !== id))\r\n        } else if (kind === \"home tasks\") {\r\n            setHomeTodos(homeTodos.filter(todo => todo.id !== id))\r\n        } else {\r\n            setShoppingTodos(shoppingTodos.filter(todo => todo.id !== id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <HashRouter basename=\"/tasks\">\r\n            <ThemeProvider theme={theme}>\r\n                <GlobalStyle/>\r\n                <div className=\"App\">\r\n                    <ActiveToDoListProvider>\r\n                        <StyledDiv2 className=\"div1\">\r\n                            <Link to='/info'><HowToUse className=\"infoLink\">How to use?</HowToUse></Link>\r\n                            <StyledButton id=\"switch\" className=\"switch\">\r\n                                <input type=\"checkbox\" onClick={e =>\r\n                                    setTheme(\r\n                                        theme.mode === 'dark'\r\n                                            ? {mode: 'light'}\r\n                                            : {mode: 'dark'}\r\n                                    )}/>\r\n                                <span className=\"slider round\"/>\r\n                            </StyledButton>\r\n                            <Styledh1>\r\n                                TO DO LIST\r\n                            </Styledh1>\r\n                            <KindOfTask setKind={setKind}/>\r\n                        </StyledDiv2>\r\n                        <Switch>\r\n                            <Route path=\"/info\" exact>\r\n                                <StyledDiv className=\"div2\">\r\n                                    <Info/>\r\n                                </StyledDiv>\r\n                            </Route>\r\n                            <Route path=\"/\">\r\n                                <StyledDiv className=\"div2\">\r\n                                    <TodoForm addTodo={addTodo} setSchoolTodos={setSchoolTodos}\r\n                                              setHomeTodos={setHomeTodos}\r\n                                              setShoppingTodos={setShoppingTodos}\r\n                                              kind={kind}/>\r\n                                    <ToDoList\r\n                                        kind={kind}\r\n                                        homeTodos={homeTodos}\r\n                                        schoolTodos={schoolTodos}\r\n                                        shoppingTodos={shoppingTodos}\r\n                                        removeTodo={removeTodo}\r\n                                        toggleComplete={toggleComplete}\r\n                                    />\r\n                                </StyledDiv>\r\n                            </Route>\r\n                        </Switch>\r\n                    </ActiveToDoListProvider>\r\n                </div>\r\n            </ThemeProvider>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}